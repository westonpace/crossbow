# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow
on: push


jobs:
  autobrew:
    name: "install from local source"
    runs-on: ${{ matrix.os }}
    env:
      CMAKE_BUILD_TYPE: "MinSizeRel"
      ARROW_R_DEV: "True"
      EXTRA_CMAKE_FLAGS: "-DCMAKE_VERBOSE_MAKEFILE=on"
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest]

    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: arrow
          repository: jonkeane/arrow
          ref: 5e81c0823df0b79274332e39e9b7d4479b8996c2
          submodules: recursive


      - name: Configure non-autobrew dependencies (macos)
        run: |
          cd arrow/r
          brew install openssl
          brew install thrift
          brew install boost
        if: contains(matrix.os, 'macOS')
      - name: Configure non-autobrew dependencies (linux)
        run: |
          cd arrow/r
          sudo apt-get update
          sudo apt install libcurl4-openssl-dev libssl-dev
        if: contains(matrix.os, 'ubuntu')
      - uses: r-lib/actions/setup-r@v1
      - name: Install dependencies
        run: |
          install.packages("remotes")
          remotes::install_deps("arrow/r", dependencies = TRUE)
          remotes::install_cran(c("rcmdcheck", "sys", "sessioninfo"))
        shell: Rscript {0}
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
      - name: Install
        env:
          _R_CHECK_CRAN_INCOMING_: false
          ARROW_USE_PKG_CONFIG: false
          FORCE_BUNDLED_BUILD: true
          LIBARROW_MINIMAL: false
          ARROW_R_DEV: TRUE
        run: |
          cd arrow
          ./r/inst/build_arrow_static.sh
#           cd ..
#           cd arrow/r
#           export CC="$(brew --prefix llvm)/bin/clang"
#           export CXX="$(brew --prefix llvm)/bin/clang++"
#           echo "CC: ${CC}"
#           echo "CC: ${CXX}"
#           ${CC} --version
#           ${CXX} --version
#           mkdir -p ~/.R/
#           echo "CC=$(brew --prefix llvm)/bin/clang" >> ~/.R/Makevars
#           echo "CXX=$(brew --prefix llvm)/bin/clang++" >> ~/.R/Makevars
#           echo "CXX11=$(brew --prefix llvm)/bin/clang++" >> ~/.R/Makevars
#           R CMD config CC
#           R CMD config CXX11
#           R CMD INSTALL . --install-tests --no-test-load --no-staged-install --no-clean-on-error
#         - name: Run the tests
#           run: R -e 'if(tools::testInstalledPackage("arrow") != 0L) stop("There was a test failure.")'
      - name: Dump test logs
        run: |
#           objdump -S /Users/runner/work/crossbow/crossbow/arrow/r/libarrow/arrow-7.0.0.9000/lib/libparquet.a > /Users/runner/work/crossbow/libparquet.a.S
          objdump -S /Users/runner/work/crossbow/crossbow/arrow/r/libarrow/dist/src/parquet/CMakeFiles/parquet_objlib.dir/level_comparison.cc.o > /Users/runner/work/crossbow/level_comparison.cc.o.S
          objdump -S /Users/runner/work/crossbow/crossbow/arrow/r/libarrow/dist/src/parquet/CMakeFiles/parquet_objlib.dir/level_comparison_avx2.cc.o > /Users/runner/work/crossbow/level_comparison_avx2.cc.o.S
          cat arrow-tests/testthat.Rout*
        if: always()
      - name: Save the level_comparison_avx2 output
        uses: actions/upload-artifact@v2
        with:
          name: level_comparison_avx2.cc.o.S
          path: /Users/runner/work/crossbow/level_comparison_avx2.cc.o.S
        if: always()
      - name: Save the level_comparison output
        uses: actions/upload-artifact@v2
        with:
          name: level_comparison.cc.o.S
          path: /Users/runner/work/crossbow/level_comparison.cc.o.S
        if: always()
      - name: Save the libparquet output
        uses: actions/upload-artifact@v2
        with:
          name: libparquet.a.S
          path: /Users/runner/work/crossbow/libparquet.a.S
        if: always()