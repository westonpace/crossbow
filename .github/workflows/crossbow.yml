# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!



# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow

on:
  push:
    branches:
      - "*-github-*"

jobs:
  windows-rtools35:
      name: "AMD64 Windows R 3.6 RTools 35"
      runs-on: windows-latest
      timeout-minutes: 60
      strategy:
        fail-fast: false
      env:
        TEST_R_WITH_ARROW: "TRUE"
        ARROW_R_CXXFLAGS: "-Werror"
        _R_CHECK_TESTS_NLINES_: 0
      steps:
        - run: git config --global core.autocrlf false
        - name: Checkout Crossbow
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Make R tests verbose
          # If you get a segfault/mysterious test Execution halted,
          # make this `true` to see where it dies.
          if: false
          shell: cmd
          run: |
            cd arrow/r/tests
            sed -i.bak -E -e 's/"arrow"/"arrow", reporter = "location"/' testthat.R
            rm -f testthat.R.bak
        - name: Checkout Arrow
          run: |
            git clone --no-checkout https://github.com/westonpace/arrow arrow
            git -C arrow fetch -t https://github.com/westonpace/arrow experiment/r-debug
            git -C arrow checkout FETCH_HEAD
            git -C arrow submodule update --init --recursive
        # We use the makepkg-mingw setup / pacman that is included in rtools40
        # even when though use the rtools35 compilers
        - uses: r-lib/actions/setup-r@master
          with:
            rtools-version: 40
            r-version: "4.0"
            Ncpus: 2
        - uses: r-lib/actions/setup-r@master
          with:
            rtools-version: 35
            r-version: "3.6"
            Ncpus: 2
        - name: Build Arrow C++
          shell: bash
          env:
            RTOOLS_VERSION: 35
          run: cd arrow && ci/scripts/r_windows_build.sh
        - uses: actions/upload-artifact@v1
          with:
            name: Rtools 35 Arrow C++
            path: arrow/libarrow.zip
        - name: Install R package dependencies
          shell: Rscript {0}
          run: |
            options(pkgType="win.binary")
            install.packages(c("remotes", "rcmdcheck"))
            remotes::install_deps("arrow/r", dependencies = TRUE)
        - name: Check
          shell: Rscript {0}
          run: |
            Sys.setenv(
              RWINLIB_LOCAL = file.path(Sys.getenv("GITHUB_WORKSPACE"), "arrow", "libarrow.zip"),
              MAKEFLAGS = paste0("-j", parallel::detectCores())
            )
            rcmdcheck::rcmdcheck("arrow/r",
                                build_args = '--no-build-vignettes',
                                args = c('--no-manual', '--as-cran', '--ignore-vignettes', '--run-donttest'),
                                error_on = 'warning',
                                check_dir = 'check',
                                timeout = 3600
            )
        - name: Dump install logs
          shell: cmd
          run: cat check/arrow.Rcheck/00install.out
          if: always()